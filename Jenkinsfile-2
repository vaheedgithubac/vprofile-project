pipeline {
  agent any // { label 'linux' }
  options { skipDefaultCheckout true
            timestamps()
            }
  stages {
    stage('Checkout') {
         steps { 
           // git branch:'main', url:'https://github.com/vaheedgithubac/vprofile-project.git'
           checkout scm 
       } 
     }

    stage('Check') {
         steps { 
           echo "WORKSPACE: ${env.WORKSPACE}"
           echo "JOB_NAME: ${env.JOB_NAME}"
           echo "JOB_BASE_NAME: ${env.JOB_BASE_NAME}"
           echo "BUILD_URL: ${env.BUILD_URL}"
           echo "PWD: $pwd"
       } 
     }

    stage('GITLEAKS SCAN') {
      // agent any
      steps {
                catchError(buildResult: 'UNSTABLE', message: 'ERROR', stageResult: 'FAILURE') {
                echo "${pwd}/workspace/${env.JOB_BASE_NAME}"
                sh "docker run -v ${env.WORKSPACE}:/path -w /path zricethezav/gitleaks:latest detect --source . --verbose -f json -r gitleaks.json"
             }
      } 
     post {
                always {
                          script {
                                    if (fileExists('gitleaks.json')) {
                                    echo 'Generated GITLEAKS Scan Analysis Result...'
                                    } 
                                    else { echo 'Unable to generate GITLEAKS Scan Analysis Result' } 
                                 }
                        }



           }
     }


   





}

}
